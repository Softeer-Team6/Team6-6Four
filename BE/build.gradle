plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.2'
    id 'io.spring.dependency-management' version '1.1.4'
    id "io.sentry.jvm.gradle" version "3.11.1"
}

compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'

// PLAIN.jar 파일 생성 안함
jar {
    enabled = false
}

group = 'com.softeer'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // sentry
    implementation 'io.sentry:sentry-spring-boot-starter-jakarta:7.3.0'
    implementation 'io.sentry:sentry-logback:7.3.0'

    //s3
    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

    // redisson
    implementation 'org.redisson:redisson-spring-boot-starter:3.18.0'

    // FCM
    implementation 'com.google.firebase:firebase-admin:9.1.1'

    // QR Code
    implementation group: 'com.google.zxing', name: 'javase', version: '3.5.0'
    implementation group: 'com.google.zxing', name: 'core', version: '3.5.0'

    // Redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // hibernate-spatial
    implementation group: 'org.hibernate', name: 'hibernate-spatial', version: '6.4.1.Final'
    implementation 'org.hibernate:hibernate-spatial'
    implementation 'com.querydsl:querydsl-spatial'

    // JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.2'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.2'

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    runtimeOnly 'com.mysql:mysql-connector-j'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'com.h2database:h2'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // QueryDsl
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"
}

tasks.named('test') {
    useJUnitPlatform()
}

// === QueryDsl 빌드 옵션 (선택) ===
def querydslDir = "$buildDir/generated/querydsl"

sourceSets {
    main.java.srcDirs += [ querydslDir ]
}

tasks.withType(JavaCompile) {
    options.getGeneratedSourceOutputDirectory().set(file(querydslDir))
}

clean.doLast {
    file(querydslDir).deleteDir()
}

sentry {
    includeSourceContext = true

    org = "soongsil-university-wd"
    projectName = "6four"
    authToken = "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"
}

tasks.named('sentryCollectSourcesJava').configure {
    mustRunAfter compileJava
}
